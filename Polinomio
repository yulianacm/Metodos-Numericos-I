{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/yulianacm/Metodos-Numericos-I/blob/main/Polinomio\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "PXhqzjXyxk3M"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "F =np.array([-5, 1, 9, 25, 55, 105])\n",
        "X=np.array([0, 1, 2, 3, 4, 5,])"
      ],
      "metadata": {
        "id": "Ss2N4uM6yBbc"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "F"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TeJqpSz1zsEt",
        "outputId": "6c2c56be-c6bd-45af-c114-484186fe5fd3"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ -5,   1,   9,  25,  55, 105])"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(F)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BrdQjKQfz7JJ",
        "outputId": "b1088283-6c4a-4e53-95ce-55de1b96ae16"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Graficamos\n",
        "plt.scatter(X,F, color=\"magenta\",marker='o')\n",
        "plt.title(\"Gr√°fica de los datos\")\n",
        "plt.xlabel('Eje x')\n",
        "plt.ylabel('Eje y')\n",
        "plt.grid(color=\"blue\",linestyle=\"--\")\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "w6hGaxIA0edS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "outputId": "40f2296d-267e-4587-9059-786ead248110"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def f(x):\n",
        "   return x**3-2*x**2+7*x-5"
      ],
      "metadata": {
        "id": "VAJFNeXn31rk"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x1=np.linspace(0,5,100)"
      ],
      "metadata": {
        "id": "Pmx4risY5Z23"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x1, f(x1))\n",
        "plt.scatter(X,F, color=\"purple\",marker='o')\n",
        "plt.title(\"Gr√°fica de los datos\")\n",
        "plt.xlabel('X')\n",
        "plt.ylabel('Y')\n",
        "plt.grid(color=\"blue\",linestyle=\"--\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "2ETqCiJL6loS",
        "outputId": "fc074a4a-45ad-4ad1-b2a2-26daddc74da4"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Definir el algoritmo\n",
        "dif=F[1]-F[0]\n",
        "print(dif)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "piNAT8By7-zy",
        "outputId": "d3364e8e-2c50-4f66-8911-542e29286292"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "delta1=np.array([])\n",
        "for i in range(len(F) -1):\n",
        "  dif=F[i+1]-F[i]\n",
        "  print(dif)\n",
        "  delta1=np.append(delta1, dif)\n",
        "print (delta1)\n",
        "#PRIMERAS DIFERENCIAS"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lUlXlVRWZOa6",
        "outputId": "6f6983d0-b984-440f-eb6e-ef247ea42fb8"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6\n",
            "8\n",
            "16\n",
            "30\n",
            "50\n",
            "[ 6.  8. 16. 30. 50.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "delta2=np.array([])\n",
        "for i in range(len(delta1) -1):\n",
        "  dif=delta1[i+1]-delta1[i]\n",
        "  print(dif)\n",
        "  delta2=np.append(delta2, dif)\n",
        "print (delta2)\n",
        "#SEGUNDAS DIFERENCIAS"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AmfMdReVZRCZ",
        "outputId": "1b3d95df-fee1-44b5-9fae-c7d63673649c"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2.0\n",
            "8.0\n",
            "14.0\n",
            "20.0\n",
            "[ 2.  8. 14. 20.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "delta3=np.array([])\n",
        "for i in range(len(delta2) -1):\n",
        "  dif=delta2[i+1]-delta2[i]\n",
        "  print(dif)\n",
        "  delta3=np.append(delta3, dif)\n",
        "print (delta3)\n",
        "#TERCERAS DIFERENCIAS"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LCgLdz53KRAm",
        "outputId": "8e806cc6-0262-4a30-fd01-f127226442ab"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6.0\n",
            "6.0\n",
            "6.0\n",
            "[6. 6. 6.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "delta4=np.array([])\n",
        "for i in range(len(delta3) -1):\n",
        "  dif=delta3[i+1]-delta3[i]\n",
        "  print(dif)\n",
        "  delta4=np.append(delta4, dif)\n",
        "print (delta4)\n",
        "#CUARTAS DIFERENCIAS"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dI3t8ZgvKd_o",
        "outputId": "193fa12b-a760-438c-f926-5e381e899973"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.0\n",
            "0.0\n",
            "[0. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor que se desea estimar es=\n",
        "Xk=1.5"
      ],
      "metadata": {
        "id": "VzPW-A3wLppP"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Calculamos el valor de h y k\n",
        "h=X[1]-X[0]\n",
        "print(h)\n",
        "K=((Xk-X[1])/h)\n",
        "print(K)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XQZ0EfptKvVJ",
        "outputId": "4be35ce3-cffe-4500-d4c1-32122cb55eef"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "0.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import scipy.special as sp"
      ],
      "metadata": {
        "id": "yt1-avmNMl2F"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "N3=sp.binom(K,3)\n",
        "print(N3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7R9nLvP1ZcQ8",
        "outputId": "4baaa58f-bb52-4258-f83b-d52d4009f565"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.0625\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "N2=sp.binom(K,2)\n",
        "print(N2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rq5NgdaULtcR",
        "outputId": "c59d1424-7293-44d1-b0be-6f587a90491f"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.125\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "N1=sp.binom(K,1)\n",
        "print(N1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sfqIEWMSMx6C",
        "outputId": "5b1635e0-0bca-4821-b047-c97f6020347e"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Entonces el polinomio que nos da es\n",
        "Yk="
      ],
      "metadata": {
        "id": "ZMz7PiWsNK24"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "FXk=N1+N2+N3\n",
        "print(f\"Valor interpolado de F({Xk}) =\", FXk)\n",
        "\n",
        "# Graficar el polinomio de Newton\n",
        "xs=np.linspace(min(X), max(X), 100)\n",
        "ys=[]\n",
        "for x in x:\n",
        "    # Recalcular K para cada punto x en la gr√°fica\n",
        "    K = (x - X[1]) / h\n",
        "    # Calcular los t√©rminos de Newton para cada punto\n",
        "    y.append(N1+N2+N3)\n",
        "\n",
        "# Graficar el polinomio interpolante junto con los puntos de datos originales\n",
        "plt.plot(xs, ys, label=\"Polinomio de Newton\", color=\"blue\")\n",
        "plt.scatter(X, F, color=\"red\", marker='o', label=\"Datos originales\")\n",
        "plt.scatter(Xk, FXk, color=\"green\", marker='x', s=100, label=f\"F({Xk}) = {FXk}\")\n",
        "plt.title(\"Interpolaci√≥n de Newton\")\n",
        "plt.xlabel('X')\n",
        "plt.ylabel('Y')\n",
        "plt.grid(color=\"blue\", linestyle=\"--\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 228
        },
        "id": "C0U7MdnPPa0Q",
        "outputId": "06578d06-dd32-47c6-f466-bb3059d1806d"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valor interpolado de F(1.5) = 110.0\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "'numpy.float64' object is not iterable",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-45-fe2289f89075>\u001b[0m in \u001b[0;36m<cell line: 7>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mxs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mys\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m     \u001b[0;31m# Recalcular K para cada punto x en la gr√°fica\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m     \u001b[0mK\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: 'numpy.float64' object is not iterable"
          ]
        }
      ]
    }
  ]
}